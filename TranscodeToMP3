#!/bin/zsh

# Written by Nick Welch <nick@incise.org>.  Author disclaims copyright.

# TranscodeToMP3: recursively find all files in the current directory with the
# specified extension (the only argument) and convert them to mp3, using
# mplayer to decode them, changing the extension to .mp3 in the new files'
# filenames and leaving the original files intact.

extension="$1"
threads=2

#i=0
#files=()
#find . -name "*$extension" | sort | while read file
#do
#    files[$i]="$file"
#    i=$(($i+1))
#done

job_slots=()
for i in `seq $threads`
do
    slot=/tmp/transcode.notify.$i
    job_slots[$i]="$slot"
    rm -f "$slot" || exit 1
    touch "$slot" || exit 1
done

transcode_file()
{
    filename="$1"
    outbox="$2"
    echo `date`" -  started: $filename"
    mkfifo "$filename".pipe
    mp3_filename=`basename "$filename" "$extension"`.mp3
    DoItEasy mplayer -really-quiet -noconsolecontrols -ao pcm:file="$filename".pipe "$filename" 2>/dev/null &
    DoItEasy lame --quiet --preset extreme "$filename".pipe "$mp3_filename"
    rm -f "$filename".pipe
    touch "$outbox"
    echo `date`" - finished: $filename"
}

look_for_empty_job_slot()
{
    for slot in $job_slots
    do
        if [ -f "$slot" ]
        then
            rm -f "$slot"
            echo "$slot"
            return
        fi
    done
}

# launch them all gradually

find . -name "*$extension" | sort | while read file
do
    while true
    do
        slot=`look_for_empty_job_slot`
        if [ -n "$slot" ]
        then
            transcode_file "$file" "$slot" &
            break
        else
            sleep 0.5
        fi
    done
done

# then wait for the remaining jobs to finish

while true
do
    stillrunning=

    for slot in $job_slots
    do
        if [ ! -f "$slot" ]
        then
            stillrunning=1
            break
        fi
    done

    if [ -z "$stillrunning" ]
    then
        exit
    else
        sleep 0.5
    fi
done

